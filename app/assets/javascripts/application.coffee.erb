#= require rails-ujs
#= require jquery
#= require jquery-ui
#= require bootstrap
#= require bootstrap-datepicker
#= require turbolinks
#= require proj4/dist/proj4
#= require ol/dist/ol
#= require_self
#= require_tree .

window.KS ||= {}

$ ->
  initBootstrapModal = ->
    $('.modal').on 'hide.bs.modal', ->
      location.reload()

  initMap = ->
    if $('#issues-map').length > 0
      KS.initializeMaps()
  initMultiSelect = ->
    if $('#issues-filter').length > 0
      KS.initializeSelectManyAutocomplete()

  $(document).on 'turbolinks:load', initBootstrapModal
  $(document).on 'turbolinks:load', KS.initDatepicker
  $(document).on 'turbolinks:load', KS.initDnD
  $(document).on 'turbolinks:load', initMap
  $(document).on 'turbolinks:load', initMultiSelect

  $(document).on 'click', '.select-all', ->
    $(@).parents('table').find('.selectable').prop('checked', @.checked)

  updateMultipleJobs = (params) ->
    $.ajax
      url: '<%= Rails.application.routes.url_helpers.jobs_path %>/update_multiple'
      data: params
      dataType: 'script'
      method: 'PUT'

  $(document).on 'keypress', '#search-issue', (e) ->
    if (e.key == 'Enter' || e.keyCode == 13)
      KS.editIssue $(this).data('controller'), @.value
    else
      e.preventDefault() unless e.key.match(/[0-9]/)

  $(document).on 'keydown', (e) ->
    if (e.key == 'Escape' || e.keyCode == 27)
      $('.modal.show').modal('hide')

  if $('#open-issue').length > 0
    KS.editIssue 'issues', $('#open-issue').data('issue')
    new_url = '<%= Rails.application.routes.url_helpers.issues_path %>'
    new_url += window.location.search
    window.history.replaceState(null, null, new_url)

  if $('#open-delegation').length > 0
    KS.editIssue 'delegations', $('#open-delegation').data('issue')
    new_url = '<%= Rails.application.routes.url_helpers.issues_path %>'
    new_url += window.location.search
    window.history.replaceState(null, null, new_url)

  $(document).on 'click', '#assign-jobs', ->
    ids = $('.selectable').toArray().filter((e) -> e.checked).map((e) -> e.value)
    return false if ids.length == 0
    $('#job-modal').modal('show')
    for id in ids
      $('form#job-assignment-form').append("<input type='hidden' name='issue_ids[]' value=#{id}>")

  $(document).on 'click', '.alert .close', (e) ->
    $(e.target).parents('.alert').hide()

KS.editIssue = (controller, id) ->
  url = ''
  if controller == 'issues'
    url = "<%= Rails.application.routes.url_helpers.issues_path %>/#{id}/edit"
  else
    url = "<%= Rails.application.routes.url_helpers.delegations_path %>/#{id}/edit"
  $.get
    url: url
    method: 'GET'
    dataType: 'script'

KS.authenticityToken = { authenticity_token: $("meta[name='csrf-token']").attr('content') }

KS.initializeModalFunctions = ->
  KS.initializeIssueAddressAutocomplete()
  KS.initializeFormActions()
  KS.initializeMaps()
  KS.initializePhotoActions()
  KS.initializeSelectManyAutocomplete()
  KS.initializeUserLdapAutocomplete()
  KS.initDatepicker()

KS.initDatepicker = ->
  $('.datepicker').datepicker(
    format: 'dd.mm.yyyy'
    language: 'de'
    todayHighlight: true
    autoclose: true
  ).on 'hide', (e) ->
    # Workaround for: https://github.com/uxsolutions/bootstrap-datepicker/issues/50
    e.stopPropagation()

KS.initDnD = ->
  $('.table-draggable').tableDnD(
    onDragClass: 'dragged-row'
    onDrop: (table, row) ->
      jobsOrder = []
      $(table.rows).each (idx) ->
        jobsOrder.push({ "#{@.dataset.id}": idx })
      $.ajax
        url: '<%= Rails.application.routes.url_helpers.jobs_path %>/change_order'
        data: Object.assign({ jobs: jobsOrder }, KS.authenticityToken)
        dataType: 'script'
        method: 'PUT'
  )
