{
  "ignored_warnings": [
    {
      "warning_type": "Remote Code Execution",
      "warning_code": 24,
      "fingerprint": "23192264d65d9a34b0101b9e120ef72098d265b2787c64f49619ebaff097a37b",
      "check_name": "UnsafeReflection",
      "message": "Unsafe reflection method `constantize` called on model attribute",
      "file": "app/controllers/groups_controller.rb",
      "line": 22,
      "link": "https://brakemanscanner.org/docs/warning_types/remote_code_execution/",
      "code": "Current.user.permitted_group_types.first.constantize",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GroupsController",
        "method": "new"
      },
      "user_input": "Current.user.permitted_group_types",
      "confidence": "Medium",
      "note": "User.permitted_group_types is not a model attribute but a defined method in context auf authorization rules. It is save."
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "3f7006eacedbe9a32dd12f1179f22e7b52a8c1693ed6afccfb3e315f9e32e2f0",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/models/issue.rb",
      "line": 85,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "self.class.connection.select_value(\"SELECT ST_AsText(ST_Transform(ST_GeomFromText('#{position}', 4326), 25833)) AS point\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Issue",
        "method": "external_position"
      },
      "user_input": "position",
      "confidence": "Medium",
      "note": "Value of position comes from database and is aspected to be safe."
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "b4f64158b1912ed6c06839144740c6860502204c246a5c402772cdb9b8ef6d05",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/dashboards_controller.rb",
      "line": 66,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"#{Issue.quoted_table_name}.\\\"id\\\" IN (SELECT DISTINCT \\\"le\\\".\\\"issue_id\\\" FROM #{LogEntry.quoted_table_name} \\\"le\\\"\\nINNER JOIN (\\n  SELECT \\\"issue_id\\\", \\\"created_at\\\" FROM #{LogEntry.quoted_table_name}\\n    WHERE \\\"attr\\\" = 'responsibility_accepted' AND LOWER(\\\"new_value\\\") = '#{I18n.t(true).downcase}'\\n) \\\"le2\\\" ON \\\"le\\\".\\\"issue_id\\\" = \\\"le2\\\".\\\"issue_id\\\" AND \\\"le2\\\".\\\"created_at\\\" >= \\\"le\\\".\\\"created_at\\\" AND (\\n  SELECT COUNT(\\\"id\\\") FROM #{LogEntry.quoted_table_name} \\\"le3\\\"\\n   WHERE \\\"le3\\\".\\\"issue_id\\\" = \\\"le\\\".\\\"issue_id\\\" AND \\\"le3\\\".\\\"attr\\\" = 'group'\\n   AND \\\"le3\\\".\\\"created_at\\\" > \\\"le\\\".\\\"created_at\\\" AND \\\"le3\\\".\\\"created_at\\\" <= \\\"le2\\\".\\\"created_at\\\"\\n) = 0\\nWHERE \\\"attr\\\" = 'group' AND \\\"new_value_id\\\" IN (#{group_ids.join(\", \")})\\n  AND \\\"le\\\".\\\"issue_id\\\" IS NOT NULL AND \\\"le\\\".\\\"issue_id\\\" NOT IN (\\n    SELECT \\\"id\\\" FROM #{Issue.quoted_table_name} WHERE \\\"group_id\\\" IN (#{group_ids.join(\", \")})))\\n\".squish)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "DashboardsController",
        "method": "changed_responsibilities"
      },
      "user_input": "I18n.t(true).downcase",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "b64baf9750e6457f3f618f2c18c05eb0dcf25000849d9d0197f7d4388598acc3",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/controllers/issues_controller/index.rb",
      "line": 81,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "Arel.sql(\"CASE\\n          WHEN updated_by_user_id is not null then\\n            (select concat(last_name, ', ', first_name) from \\\"#{user_arel_table.name}\\\" u\\n              where u.id = updated_by_user_id)\\n          WHEN updated_by_auth_code_id is not null then\\n            (select short_name from \\\"#{group_arel_table.name}\\\" g\\n              where g.id in (select group_id from auth_code where id = updated_by_auth_code_id)) END #{dir}\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "IssuesController",
        "method": "custom_order_last_editor"
      },
      "user_input": "user_arel_table.name",
      "confidence": "Medium",
      "note": ""
    },
    {
      "warning_type": "SQL Injection",
      "warning_code": 0,
      "fingerprint": "dfa8add7e9a6a0052055fee62589ad3258836c7d758eccaa91b53c33998e1cdb",
      "check_name": "SQL",
      "message": "Possible SQL injection",
      "file": "app/jobs/calculate_average_turnaround_time_job.rb",
      "line": 27,
      "link": "https://brakemanscanner.org/docs/warning_types/sql_injection/",
      "code": "LogEntry.connection.select_value(\"SELECT EXTRACT(DAY FROM AVG(\\\"diff\\\"))::INTEGER\\nFROM (\\n  SELECT DISTINCT ON (\\\"le\\\".\\\"id\\\") \\\"le\\\".\\\"created_at\\\" - \\\"prev\\\".\\\"created_at\\\" \\\"diff\\\"\\n  FROM #{LogEntry.quoted_table_name} \\\"le\\\"\\n    JOIN #{LogEntry.quoted_table_name} \\\"prev\\\" ON\\n      \\\"prev\\\".\\\"issue_id\\\" = \\\"le\\\".\\\"issue_id\\\" AND\\n      \\\"prev\\\".\\\"created_at\\\" < \\\"le\\\".\\\"created_at\\\" AND\\n      \\\"prev\\\".\\\"table\\\" = 'issue' AND\\n      \\\"prev\\\".\\\"attr\\\" = 'status' AND\\n      \\\"prev\\\".\\\"new_value\\\" = '#{Issue.human_enum_name(:status, :in_process)}'\\n  WHERE \\\"le\\\".\\\"table\\\" = 'issue' AND\\n    \\\"le\\\".\\\"attr\\\" = 'status' AND\\n    \\\"le\\\".\\\"old_value\\\" = '#{Issue.human_enum_name(:status, :in_process)}' AND\\n    \\\"le\\\".\\\"issue_id\\\" IN (SELECT \\\"id\\\" FROM #{Issue.quoted_table_name} WHERE \\\"category_id\\\" = #{category_id})\\n  ORDER BY \\\"le\\\".id, \\\"prev\\\".\\\"created_at\\\" DESC\\n) s\\n\".squish)",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "CalculateAverageTurnaroundTimeJob",
        "method": "average_turnaround_days"
      },
      "user_input": "Issue.human_enum_name(:status, :in_process)",
      "confidence": "High",
      "note": "Won't fix. Value of status is translation of enum and comes from config/locale."
    },
    {
      "warning_type": "Session Setting",
      "warning_code": 29,
      "fingerprint": "f0ee1cc1980474c82a013645508f002dcc801e00db5592f7dd8cd6bdb93c73fe",
      "check_name": "SessionSettings",
      "message": "Session secret should not be included in version control",
      "file": "config/secrets.yml",
      "line": 2,
      "link": "https://brakemanscanner.org/docs/warning_types/session_setting/",
      "code": null,
      "render_path": null,
      "location": null,
      "user_input": null,
      "confidence": "High",
      "note": ""
    }
  ],
  "updated": "2022-08-30 09:53:02 +0200",
  "brakeman_version": "5.2.3"
}
